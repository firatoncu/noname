[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "n0name-trading-bot"
version = "2.0.0"
description = "Advanced algorithmic trading bot with modern architecture"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "n0name Team", email = "contact@n0name.com"}
]
maintainers = [
    {name = "n0name Team", email = "contact@n0name.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "pyyaml>=6.0",
    "python-binance>=1.0.19",
    "pandas>=2.0.0",
    "ta>=0.10.2",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "watchdog>=3.0.0",
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0",
    "uvloop>=0.17.0",
    "aiodns>=3.0.0",
    "cchardet>=2.1.7",
    "brotlipy>=0.7.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "psutil>=5.9.0",
    "email-validator>=2.1.0",
    "dependency-injector>=4.41.0",
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.3.0",
    "pytest-html>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-randomly>=3.12.0",
    "pytest-sugar>=0.9.7",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
    "ruff>=0.1.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.2.0",
    "responses>=0.24.0",
    "aioresponses>=0.7.4",
    "httpx>=0.25.0",
    "faker>=20.0.0",
    "coverage[toml]>=7.0.0",
    "tox>=4.0.0",
]
performance = [
    "cython>=3.0.0",
    "numba>=0.58.0",
    "numpy>=1.24.0",
]
monitoring = [
    "prometheus-client>=0.17.0",
    "grafana-api>=1.0.3",
]

[project.scripts]
n0name-cli = "n0name.cli:main"
n0name-bot = "n0name.cli:main"

[project.urls]
Homepage = "https://github.com/n0name/trading-bot"
Documentation = "https://n0name.readthedocs.io/"
Repository = "https://github.com/n0name/trading-bot.git"
"Bug Tracker" = "https://github.com/n0name/trading-bot/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
n0name = ["config/*.yml", "templates/*.html"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["n0name"]
known_third_party = ["binance", "pandas", "pydantic", "fastapi"]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "binance.*",
    "ta.*",
    "uvloop.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--tb=short",
    "--maxfail=5",
    "--durations=10",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "smoke: marks tests as smoke tests for quick validation",
    "regression: marks tests as regression tests",
    "performance: marks tests as performance tests",
    "security: marks tests as security tests",
    "api: marks tests that require API access",
    "database: marks tests that require database access",
    "websocket: marks tests that require websocket connections",
    "mock: marks tests that use extensive mocking",
]
asyncio_mode = "auto"
timeout = 300
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/virtualenv/*",
    "*/site-packages/*",
    "*/build/*",
    "*/dist/*",
    "*/examples/*",
    "*/scripts/*",
]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "except ImportError:",
    "except ModuleNotFoundError:",
    "if TYPE_CHECKING:",
    "\\.\\.\\.",
]
show_missing = true
skip_covered = false
precision = 2
sort = "Cover"

[tool.coverage.html]
directory = "htmlcov"
title = "n0name Trading Bot Test Coverage"

[tool.coverage.xml]
output = "coverage.xml"

# Ruff configuration
[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"] 